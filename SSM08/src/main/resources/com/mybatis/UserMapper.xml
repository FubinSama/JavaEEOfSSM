<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserDao">
    <!--根据uid查询一个用户信息-->
    <select id="selectUserById" parameterType="Integer" resultType="com.po.MyUser">
        select * from user where uid = #{uid};
    </select>
    <!--查询所用用户信息-->
    <select id="selectAllUser" resultType="com.po.MyUser">
        select * from user;
    </select>
    <!--添加一个用户-->
    <insert id="addUser" parameterType="com.po.MyUser">
        insert into USER (uname, usex) values (#{uname}, #{usex});
    </insert>
    <!--修改一个用户-->
    <update id="updateUser" parameterType="com.po.MyUser">
        update user set uname=#{uname}, usex=#{usex} where uid = #{uid};
    </update>
    <!--删除一个用户-->
    <delete id="deleteUser" parameterType="com.po.MyUser">
        delete from user where uid = #{uid};
    </delete>

    <!--使用if元素根据条件动态查询用户信息-->
    <select id="selectUserByIf" resultType="com.po.MyUser" parameterType="com.po.MyUser">
        select * from user where 1 = 1
        <if test="uname != null and uname != ''">
            and uname like concat('%', #{uname}, '%')
        </if>
        <if test="usex != null and usex != ''">
            and usex = #{usex}
        </if>
    </select>

    <!--使用choose、when、otherwise元素根据条件动态查询用户信息-->
    <select id="selectUserByChoose" resultType="com.po.MyUser" parameterType="com.po.MyUser">
        select * from user where 1=1
        <choose>
            <when test="uname != null and uname != ''">
                and uname like concat('%', #{uname}, '%')
            </when>
            <when test="usex != null and usex != ''">
                and usex = #{usex}
            </when>
            <otherwise>
                and uid > 10
            </otherwise>
        </choose>
    </select>

    <!--使用trim元素根据条件动态查询用户信息 trim:在自己包含的内容加上某些前缀（prefix）或后缀（suffix），
    把包含内容的首部（prefixOverrides）或尾部（suffixOverrides）的某些内容覆盖掉-->
    <select id="selectUserByTrim" resultType="com.po.MyUser" parameterType="com.po.MyUser">
        select * from user
        <trim prefix="where" prefixOverrides="and | or">
          <if test="uname != null and uname != ''">
              and uname like concat('%', #{uname}, '%')
          </if>
          <if test="usex != null and usex != ''">
              and usex = #{usex}
          </if>
        </trim>
    </select>

    <!--使用where元素根据条件动态查询用户信息-->
    <select id="selectUserByWhere" resultType="com.po.MyUser" parameterType="com.po.MyUser">
        select * from user
        <where>
            <if test="uname != null and uname != ''">
                and uname like concat('%', #{uname}, '%')
            </if>
            <if test="usex != null and usex != ''">
                and usex = #{usex}
            </if>
        </where>
    </select>

    <!--使用set元素动态修改一个用户-->
    <update id="updateUserBySet" parameterType="com.po.MyUser">
        update user
        <set>
            <if test="uname != null">uname = #{uname}</if>
            <if test="usex != null">usex = #{usex}</if>
        </set>
        where uid = #{uid}
    </update>

    <!--使用foreach元素查询用户信息-->
    <select id="selectUserByForeach" resultType="com.po.MyUser" parameterType="List">
        select * from user where uid in 
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--使用bind元素进行模糊查询-->
    <!--bind中的uname是com.po.MyUser的属性名-->
    <select id="selectUserByBind" resultType="com.po.MyUser" parameterType="com.po.MyUser">
        <bind name="param_uname" value="'%' + uname + '%'" />
        select * from user where uname like #{param_uname}
    </select>
</mapper>